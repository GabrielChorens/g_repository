export default {
  title: "21f C√≥mo gestionar configuraci√≥n de infraestructura   DB Connection",
  videoId: "pxsKzbqVNJA",
  notes: [
    { type: "subtitle", content: "Del Parameter Object a DB Connection" },
    { type: "text", content: "Tener que repetir la creaci√≥n de la conexi√≥n a BD en cada repositorio es algo que nos chirr√≠a bastante y que obliga a que cada repositorio tenga que conocer demasiados detalles de c√≥mo se instancia dicha conexi√≥n, para solucionarlo podemos optar por la creaci√≥n de una clase Connection que se encargue de dichos detalles" },
    { type: "subtitle", content: "Implementaci√≥n en MySqlUserRepository" },
    { type: "code", content: `export class MySqlUserRepository {
    constructor(connection) {
        this.connection = connection;
    }

    searchAll() {
        return this.connection.query('SELECT * FROM users');
    }
}` },
    { type: "text", content: "Con esto estamos consiguiendo que nuestro repositorio se desentienda absolutamente de par√°metros y l√≥gica de configuraci√≥n, responsabiliz√°ndose √∫nicamente de la ejecuci√≥n de consultas a BD" },
    { type: "subtitle", content: "Implementaci√≥n en Container" },
    { type: "code", content: `export class Container {
    Mysql = require('sync-mysql');
    
    mysqlConfig     = new MySqlConfig();
    mySqlConnection = new this.Mysql({
        host:     this.mysqlConfig.host,
        user:     this.mysqlConfig.user,
        password: this.mysqlConfig.password,
        database: this.mysqlConfig.database,
        port:     this.mysqlConfig.port
    });
    
    mysqlUserRepository = new MySqlUserRepository(this.mySqlConnection);
    usersSearcher       = new UsersSearcher(this.mysqlUserRepository);
}` },
    { type: "text", content: "Al inyectar la conexi√≥n de este modo, evitamos tambi√©n el hecho de tener que llevarnos todo el Container a los repositorios, que era uno de los problemas que ve√≠amos previamente, adem√°s de dejar las relaciones de dependencias mucho m√°s expl√≠citas üôå" },
    { type: "text", content: "En relaci√≥n a la posibilidad de extraer a√∫n m√°s la inyecci√≥n de esta conexi√≥n pod√©is revisar los cursos de Principios SOLID y Arquitectura Hexagonal para profundizar m√°s en el tema de composici√≥n sobre herencia" },
    { type: "subtitle", content: "En resumen:" },
    { type: "text", content: "Nuestro caso de uso ahora recibe el repositorio por inyecci√≥n de dependencias, por lo que podemos doblarlo en tiempo de tests: Ahora es testeable üëç" },
    { type: "text", content: "El repositorio estar√≠a recibiendo tambi√©n por inyecci√≥n una conexi√≥n a BD, con lo que su responsabilidad es ahora m√≠nima y el c√≥digo mucho m√°s legible üëç" },
    { type: "text", content: "La conexi√≥n pertenece a una librer√≠a externa, pero al estar ya acoplados a esta librer√≠a a nivel de infraestructura, nuestra opini√≥n es que no merece la pena introducir otro nivel m√°s de indirecci√≥n creando nuestra propia clase Connection ü§∑üèº‚Äç‚ôÇÔ∏è" },
    { type: "subtitle", content: "¬øAlguna Duda?" },
    { type: "text", content: "Si tienes alguna duda sobre el contenido del video o te apetece compartir cualquier sugerencia recuerda que puedes en abrir una nueva discusi√≥n justo aqu√≠ abajo üëáüëáüëá" },
    { type: "text", content: "¬°Nos vemos en la siguiente lecci√≥n: Complex Conditionals Code Smell!" },
  ],
};
