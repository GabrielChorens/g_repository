export default {
  title:
    "51 Filtrado de elementos Patron CriteriaSpecification objetos de dominio",
  videoId: "_yeZGmJkqnQ",
  notes: [
    { type: "subtitle", content: "üóÉ Filtrado de elementos: Patr√≥n Criteria/Specification (objetos de dominio)" },
    {
      type: "text",
      content: "Puesto que ya tenemos el listado de cursos mostr√°ndose en el Backoffice ser√° interesante poder filtrarlos y, para ello, haremos uso del Patr√≥n Criteria o Specification Pattern üîç"
    },
    {
      type: "text",
      content: "Aunque al principio pudiera parecer un mecanismo complicado, los beneficios que puede aportarnos son altos. Adem√°s cont√°is con este ejemplo que encontrar√©is en el repositorio del curso para que pod√°is a√±adirlo a vuestros proyectos y probar üôå"
    },
    {
      type: "text",
      content: "Estos filtros tienen una serie de elementos tangenciales como son el Campo por el que queremos filtrar, el Operador que se ejecutar√° y el Valor introducido. En nuestro caso tambi√©n a√±adiremos un L√≠mite y un Offset para paginar la consulta, pero entendemos que puede haber escenarios en los que pueda interesar hacerlo en base a un identificador de recurso"
    },
    {
      type: "text",
      content: "Este patr√≥n resulta altamente recomendable cuando el n√∫mero de filtros que aplicamos en un listado puede aumentar demasiado y corremos el riesgo de acabar con repositorios con un sin f√≠n de m√©todos que cubran todas las posibles combinatorias."
    },
    {
      type: "text",
      content: "Lo que busca este patr√≥n es justamente tener un √∫nico m√©todo para filtrar en la Interface del repositorio que reciba un objeto Criteria de nuestro propio Dominio de modo que cada implementaci√≥n se encargue de traducir dicho objeto a una query en el sistema que estemos utilizando (MySql, Elasticsearch, etc)"
    },
    {
      type: "text",
      content: "As√≠ pues, una vez nos llegue la petici√≥n HTTP desde el front al Controller lo que haremos ser√° extraer todos los posibles filtros de la Request y para guardarlos en un listado de HashMaps y enviarlos en la query SearchBackofficeCoursesByCriteriaQuery."
    },
    {
      type: "text",
      content: "Esta query acaba llegando al QueryHandler, donde crearemos un Filters y Order (de nuestro Dominio üëÄ) v√≠a named constructor y se los pasaremos junto al limit y el offset al caso de uso"
    },
    {
      type: "text",
      content: "Desde el caso de uso instanciaremos nuestro Criteria y se lo pasaremos al matching() de nuestro repositorio que lo estar√° esperando por par√°metro como coment√°bamos al inicio del video y que ser√° lo que nos permita simplificar toda esa explosi√≥n de m√©todos de tipo 'searchBy‚Ä¶' en √∫n √∫nico m√©todo"
    },
    {
      type: "subtitle",
      content: "¬øAlguna Duda?"
    },
    {
      type: "text",
      content: "Si tienes alguna duda sobre el contenido del video o quieres compartir alguna sugerencia no dudes en abrir una nueva discusi√≥n m√°s abajo üëáüëáüëá"
    },
    {
      type: "text",
      content: "¬°Nos vemos en el siguiente video: üïµÔ∏è Filtrado de elementos: Patr√≥n Criteria en MySQL!"
    }
  ],
};
