// Define your courses here
export const courses = [
    { type: 'category', name: 'All' },
    {
        title: "Arquitectura Hexagonal en Frontend",
        firstVideoId: "SOSKrUrpXpM",
        folder: "Arquitectura Hexagonal en Frontend",
        notes: [
            { type: "subtitle", content: "Curso sobre Arquitectura Hexagonal en el Frontend." },
            { type: "text", content: "La arquitectura hexagonal es una metodolog√≠a de dise√±o de software que busca separar la l√≥gica de negocio de las dependencias t√©cnicas, permitiendo tener una mayor modularidad, escalabilidad y mantenibilidad del c√≥digo, una mejor separaci√≥n de responsabilidades entre los componentes y una mayor facilidad para realizar tests." },
            { type: "text", content: "En este curso veremos c√≥mo implementar Arquitectura Hexagonal en las aplicaciones de frontend desde 0, entendiendo las capas, las reglas de negocio y la comunicaci√≥n entre ellas que nos facilita el testing. Tambi√©n veremos c√≥mo refactorizar aplicaciones existentes a hexagonal, analizando qu√© nos aporta y si realmente vale la pena." },
            { type: "text", content: "Para hacer este curso no es necesario haber hecho el curso de Arquitectura Hexagonal." },
            { type: "subtitle", content: "Contenidos principales:" },
            { type: "text", content: "‚ú® Las bases de Arquitectura Hexagonal en 10 minutos" },
            { type: "text", content: "üîå ¬°Hay l√≥gica de negocio en el frontend!" },
            { type: "text", content: "üéØ Como crear React Vue o framework favorito con la Arquitectura Hexagonal" },
            { type: "text", content: "üì± Monolito, aplicaci√≥n y suscripci√≥n utilizando Hexagonal Aplicaci√≥n Dominio e Infraestructura" },
            { type: "text", content: "üîÑ Mantenibilidad, cambiabilidad y testabilidad con el patr√≥n Repository" },
            { type: "text", content: "üéØ Tests unitarios, de integraci√≥n y E2E en Arquitectura Hexagonal" },
            { type: "text", content: "üîå De jQuery a Arquitectura Hexagonal" },
            { type: "text", content: "üì± Clean Architecture vs Arquitectura Hexagonal" },
            { type: "text", content: "üîÑ Micro tests, aplicaci√≥n de patr√≥n Object Mother" },
            { type: "text", content: "üéØ Migraci√≥n de una aplicaci√≥n a Arquitectura Hexagonal: funcional y orientaci√≥n a objetos" },
            { type: "text", content: "‚ú® ¬øTienen sentido los Value Objects en el frontend?" },
            { type: "named_link", text: "Repositorio del curso", url: "https://github.com/CodelyTV/frontend-hexagonal_architecture-course" }
        ]
    },
    {
        title: "Agregados [Modelado de dominio]",
        firstVideoId: "fk5gHvTOjjU",
        folder: "Agregados [Modelado de dominio]",

        notes: [
            { type: "subtitle", content: "Curso sobre modelado de dominio y agregados en DDD." },
            { type: "text", content: "Domina los Agregados en el dise√±o de software y haz tus aplicaciones m√°s mantenibles, escalables y testables. Aprende c√≥mo definir el dominio con precisi√≥n, sin problemas comunes de rendimiento y ampl√≠a tus habilidades en arquitectura de Software." },
            { type: "named_link", text: "Repositorio del curso", url: "https://github.com/CodelyTV/aggregates-course" },
        ]
    },
    {
        title: "Proyecciones [Modelado del dominio]",
        firstVideoId: "pnb1aX69a_c",
        folder: "Proyecciones [Modelado del dominio]",
        notes: [
            { type: "subtitle", content: "Curso sobre proyecciones en DDD." },
            { type: "text", content: "Domina las Proyecciones en el dise√±o de software para hacer tus aplicaciones m√°s mantenibles, escalables y testeables." },
            { type: "named_link", text: "Repositorio del curso", url: "https://github.https://github.com/CodelyTV/domain_modeling-projections-course/tree/main/CodelyTV/projections-course" },
        ]

    },
    {
        title: "AWS Tu primer deploy en EC2",
        firstVideoId: "kCv4wpzWgws",
        folder: "AWS Tu primer deploy en EC2",
        notes: [
            { type: "subtitle", content: "Curso sobre AWS y EC2." },
            { type: "text", content: "Aprende las bases de Amazon Web Services (AWS) para levantar tu primera aplicaci√≥n en la nube. Crea tu propia VPC, elige la instancia adecuada de EC2, configurar acceso SSH, elige tu AMI base y crea la tuya propia, define los Security Groups apropiados, Deploya, y configura Route53 como DNS!" },
        ]
    },
    {
        title: "API HTTP en Go aplicando Arquitectura Hexagonal",
        firstVideoId: "2vlYmKck2lE",
        folder: "API HTTP en Go aplicando Arquitectura Hexagonal",
        notes: [
            { type: "subtitle", content: "Curso sobre API HTTP en Go aplicando Arquitectura Hexagonal." },
            { type: "text", content: "Aprende a desarrollar tu primera API HTTP en Go aplicando algunos de los fundamentos de la Arquitectura Hexagonal." },
            { type: "text", content: "El caso de uso de las APIs HTTP (y similares) es uno de los m√°s frecuentes hoy en d√≠a en el mundo del desarrollo, as√≠ que no hay mejor manera de continuar con el aprendizaje del lenguaje de programaci√≥n Go que implementar una." },
            { type: "text", content: "Para ello, seguiremos algunos de los fundamentos de la Arquitectura Hexagonal que nos permitir√°n mejorar la mantenibilidad, testabilidad y escalabilidad del c√≥digo." },
            { type: "subtitle", content: "Qu√© veremos en este curso:" },
            { type: "text", content: "‚ú® Estructura de un proyecto en Go aplicando los fundamentos de la Arquitectura Hexagonal" },
            { type: "text", content: "üîå Montar un API HTTP en Golang desde los tests" },
            { type: "text", content: "üéØ Definir nuestra interfaz HTTP y nuestros middlewares mediante el uso de la librer√≠a est√°ndar y middleware framework" },
            { type: "text", content: "üì± Crear una implementaci√≥n de nuestro repositorio compatible con MySQL" },
            { type: "text", content: "üîÑ Monolito, aplicaci√≥n y suscripci√≥n de eventos de dominio" },
            { type: "text", content: "üéØ Testing: Testearemos nuestra aplicaci√≥n haciendo uso de mocks y verlo ejemplos de integraci√≥n a fila a fila" },
            { type: "text", content: "Pese a que se repasan algunos de los conceptos, este curso asume unos conocimientos b√°sicos tanto del lenguaje de programaci√≥n Go como de la Arquitectura Hexagonal." },
            { type: "named_link", text: "Repositorio del curso", url: "https://github.com/CodelyTV/go-hexagonal_http_api-course" },
        ]
    }
];