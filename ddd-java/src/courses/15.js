export default {
  title: "15 Mapeo de modelos de dominio en Hibernate",
  videoId: "wV1V0mYrp5E",
  notes: [
    { type: "subtitle", content: "Mapeo de Modelos de Dominio en Hibernate" },
    {
      type: "text",
      content: "Como vimos previamente, a fin de evitar contaminar nuestro Dominio con detalles de Infraestructura como las anotaciones de Hibernate, usaremos XMLs para el mapeo de nuestras entidades."
    },
    {
      type: "text",
      content: "El caso del agregado Course tiene algunas particularidades y es que sus atributos no son de tipo String que pudi√©ramos mapear f√°cilmente a su correspondencia en BD, sino que tanto la primary key como el resto de atributos son Value Objects. Por esta raz√≥n ser√° necesario que volvamos a personalizar la manera en que trabajar√° Hibernate"
    },
    {
      type: "text",
      content: "Ojo üëÄ: es importante que definamos el Charset de nuestra tabla en BD como utf8mb4 para que nos permita guardar emojis üôå en los campos de nuestra tabla"
    },
    {
      type: "code",
      content: "<hibernate-mapping>\n    <class name=\"tv.codely.mooc.courses.domain.Course\" table=\"courses\">\n        <composite-id name=\"id\" class=\"tv.codely.mooc.courses.domain.CourseId\" access=\"field\">\n            <key-property column=\"id\" name=\"value\" length=\"36\" access=\"field\" />\n        </composite-id>\n\n        <component name=\"name\" class=\"tv.codely.mooc.courses.domain.CourseName\" access=\"field\">\n            <property name=\"value\" column=\"name\" type=\"string\" access=\"field\" />\n        </component>\n\n        <component name=\"duration\" class=\"tv.codely.mooc.courses.domain.CourseDuration\" access=\"field\">\n            <property name=\"value\" column=\"duration\" type=\"string\" access=\"field\" />\n        </component>\n    </class>\n</hibernate-mapping>"
    },
    {
      type: "text",
      content: "Como en cualquier otro mapeo, dentro de la etiqueta <class>le indicamos cual es la clase y la tabla con la que vamos a relacionarla."
    },
    {
      type: "text",
      content: "Para el identificador usaremos un truquillo que Hibernate nos permite: En lugar de un <id> normal, usaremos un <composite-id> en el cual indicaremos que la clase es CourseId y relacionaremos la etiqueta <key-property> el atributo valuede esta clase con la columna idde la tabla"
    },
    {
      type: "text",
      content: "CodelyTv Tip ‚òùÔ∏è: Por defecto Hibernate espera que tengamos unos getters y setters definidos en las entidades para rellenar los campos, esto no nos resulta una soluci√≥n limpia y no nos convence el hecho de tener que modelar nuestro dominio por culpa de una librer√≠a externa. Para evitar esta concesi√≥n podemos definir el atributo 'access' con el valor 'field' cuando mapeamos los atributos para indicarle que rellene el valor por reflexi√≥n"
    },
    {
      type: "text",
      content: "Para los dem√°s Value Objects usaremos la etiqueta <component> seguiremos un proceso muy similar, indic√°ndole dentro de que clase est√° el campo y dentro de esta clase cual es el nombre del atributo que debe utilizar para mapear con la columna en BD. Al igual que para el identificador, usaremos el atributo 'access' para especificarle que utilice reflexi√≥n para rellenar el valor"
    },
    {
      type: "text",
      content: "Este es el modo con el que conseguimos eludir algunos de los cambios sobre nuestro Dominio que Hibernate nos impone, no obstante hay un aspecto con el cual no tendremos tanta suerte, ya que para poder hacer reflexi√≥n este ORM llamar√° al m√©todo newInstance() de la clase sobre la que act√∫e, el cual necesita que √©sta tenga implementado un constructor vac√≠o ü§∑üèº‚Äç‚ôÇÔ∏è, es decir, todos nuestros Value Objects tendr√°n que implementar un constructor vac√≠o. aunque por suerte podremos definirlo como privado y reducir as√≠ el impacto en nuestro Dominio"
    },
    { type: "subtitle", content: "¬øAlguna Duda?" },
    {
      type: "text",
      content: "Si tienes alguna duda sobre el contenido del video o quieres compartir alguna sugerencia no dudes en abrir una nueva discusi√≥n m√°s abajo üëáüëáüëá"
    },
    {
      type: "text",
      content: "¬°Nos vemos en el siguiente video: üêã Implementaci√≥n del repositorio para MySql!"
    }
  ],
};
